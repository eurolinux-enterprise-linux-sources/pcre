From 76a75bda0922676311adc2018004d7daa3bd7fae Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Petr=20P=C3=ADsa=C5=99?= <ppisar@redhat.com>
Date: Mon, 14 May 2012 15:57:04 +0200
Subject: [PATCH] Fix spelling formfeed, runtime, whitespace

Port to pcre-7.8.
See <http://bugs.exim.org/show_bug.cgi?id=1245>.
---
 doc/pcre.3          |    2 +-
 doc/pcre_compile.3  |    2 +-
 doc/pcre_compile2.3 |    2 +-
 doc/pcreapi.3       |   12 ++++++------
 doc/pcrebuild.3     |    2 +-
 doc/pcrecpp.3       |    2 +-
 doc/pcrepattern.3   |   26 +++++++++++++-------------
 doc/pcresyntax.3    |   16 ++++++++--------
 8 files changed, 32 insertions(+), 32 deletions(-)

diff --git a/doc/pcre.3 b/doc/pcre.3
index 4f738d9..32d9622 100644
--- a/doc/pcre.3
+++ b/doc/pcre.3
@@ -257,7 +257,7 @@ must use Unicode property tests such as \ep{Nd}.
 7. Similarly, characters that match the POSIX named character classes are all
 low-valued characters.
 .P
-8. However, the Perl 5.10 horizontal and vertical whitespace matching escapes
+8. However, the Perl 5.10 horizontal and vertical white space matching escapes
 (\eh, \eH, \ev, and \eV) do match all the appropriate Unicode characters.
 .P
 9. Case-insensitive matching applies only to characters whose values are less
diff --git a/doc/pcre_compile.3 b/doc/pcre_compile.3
index 48f92f7..312cbb3 100644
--- a/doc/pcre_compile.3
+++ b/doc/pcre_compile.3
@@ -38,7 +38,7 @@ The option bits are:
   PCRE_DOLLAR_ENDONLY     $ not to match newline at end
   PCRE_DOTALL             . matches anything including NL
   PCRE_DUPNAMES           Allow duplicate names for subpatterns
-  PCRE_EXTENDED           Ignore whitespace and # comments
+  PCRE_EXTENDED           Ignore white space and # comments
   PCRE_EXTRA              PCRE extra features
                             (not much use currently)
   PCRE_FIRSTLINE          Force matching to be before newline
diff --git a/doc/pcre_compile2.3 b/doc/pcre_compile2.3
index 1e71aff..3190144 100644
--- a/doc/pcre_compile2.3
+++ b/doc/pcre_compile2.3
@@ -40,7 +40,7 @@ The option bits are:
   PCRE_DOLLAR_ENDONLY   $ not to match newline at end
   PCRE_DOTALL           . matches anything including NL
   PCRE_DUPNAMES         Allow duplicate names for subpatterns
-  PCRE_EXTENDED         Ignore whitespace and # comments
+  PCRE_EXTENDED         Ignore white space and # comments
   PCRE_EXTRA            PCRE extra features
                           (not much use currently)
   PCRE_FIRSTLINE        Force matching to be before newline
diff --git a/doc/pcreapi.3 b/doc/pcreapi.3
index e8875f8..840eb5e 100644
--- a/doc/pcreapi.3
+++ b/doc/pcreapi.3
@@ -226,7 +226,7 @@ PCRE supports five different conventions for indicating line breaks in
 strings: a single CR (carriage return) character, a single LF (linefeed)
 character, the two-character sequence CRLF, any of the three preceding, or any
 Unicode newline sequence. The Unicode newline sequences are the three just
-mentioned, plus the single characters VT (vertical tab, U+000B), FF (formfeed,
+mentioned, plus the single characters VT (vertical tab, U+000B), FF (form feed,
 U+000C), NEL (next line, U+0085), LS (line separator, U+2028), and PS
 (paragraph separator, U+2029).
 .P
@@ -520,15 +520,15 @@ documentation.
 .sp
   PCRE_EXTENDED
 .sp
-If this bit is set, whitespace data characters in the pattern are totally
-ignored except when escaped or inside a character class. Whitespace does not
+If this bit is set, white space data characters in the pattern are totally
+ignored except when escaped or inside a character class. White space does not
 include the VT character (code 11). In addition, characters between an
 unescaped # outside a character class and the next newline, inclusive, are also
 ignored. This is equivalent to Perl's /x option, and it can be changed within a
 pattern by a (?x) option setting.
 .P
 This option makes it possible to include comments inside complicated patterns.
-Note, however, that this applies only to data characters. Whitespace characters
+Note, however, that this applies only to data characters. White space characters
 may never appear within special character sequences in a pattern, for example
 within the sequence (?( which introduces a conditional subpattern.
 .sp
@@ -593,7 +593,7 @@ CRLF sequence. Setting PCRE_NEWLINE_ANYCRLF specifies that any of the three
 preceding sequences should be recognized. Setting PCRE_NEWLINE_ANY specifies
 that any Unicode newline sequence should be recognized. The Unicode newline
 sequences are the three just mentioned, plus the single characters VT (vertical
-tab, U+000B), FF (formfeed, U+000C), NEL (next line, U+0085), LS (line
+tab, U+000B), FF (form feed, U+000C), NEL (next line, U+0085), LS (line
 separator, U+2028), and PS (paragraph separator, U+2029). The last two are
 recognized only in UTF-8 mode.
 .P
@@ -609,7 +609,7 @@ pattern is if PCRE_EXTENDED is set, and an unescaped # outside a character
 class is encountered. This indicates a comment that lasts until after the next
 line break sequence. In other circumstances, line break sequences are treated
 as literal data, except that in PCRE_EXTENDED mode, both CR and LF are treated
-as whitespace characters and are therefore ignored.
+as white space characters and are therefore ignored.
 .P
 The newline option that is set at compile time becomes the default that is used
 for \fBpcre_exec()\fP and \fBpcre_dfa_exec()\fP, but it can be overridden.
diff --git a/doc/pcrebuild.3 b/doc/pcrebuild.3
index db635e8..31e2685 100644
--- a/doc/pcrebuild.3
+++ b/doc/pcrebuild.3
@@ -236,7 +236,7 @@ only. If you add
 .sp
 to the \fBconfigure\fP command, the distributed tables are no longer used.
 Instead, a program called \fBdftables\fP is compiled and run. This outputs the
-source for new set of tables, created in the default locale of your C runtime
+source for new set of tables, created in the default locale of your C run-time
 system. (This method of replacing the tables does not work if you are cross
 compiling, because \fBdftables\fP is run on the local host. If you need to
 create alternative tables when cross compiling, you will have to do so "by
diff --git a/doc/pcrecpp.3 b/doc/pcrecpp.3
index e52bd29..4bbd122 100644
--- a/doc/pcrecpp.3
+++ b/doc/pcrecpp.3
@@ -167,7 +167,7 @@ supported:
    PCRE_DOTALL           dot matches newlines        /s
    PCRE_DOLLAR_ENDONLY   $ matches only at end       N/A
    PCRE_EXTRA            strict escape parsing       N/A
-   PCRE_EXTENDED         ignore whitespaces          /x
+   PCRE_EXTENDED         ignore white spaces         /x
    PCRE_UTF8             handles UTF8 chars          built-in
    PCRE_UNGREEDY         reverses * and *?           N/A
    PCRE_NO_AUTO_CAPTURE  disables capturing parens   N/A (*)
diff --git a/doc/pcrepattern.3 b/doc/pcrepattern.3
index 19895b3..cc96b50 100644
--- a/doc/pcrepattern.3
+++ b/doc/pcrepattern.3
@@ -171,10 +171,10 @@ otherwise be interpreted as a metacharacter, so it is always safe to precede a
 non-alphanumeric with backslash to specify that it stands for itself. In
 particular, if you want to match a backslash, you write \e\e.
 .P
-If a pattern is compiled with the PCRE_EXTENDED option, whitespace in the
+If a pattern is compiled with the PCRE_EXTENDED option, white space in the
 pattern (other than in a character class) and characters between a # outside
 a character class and the next newline are ignored. An escaping backslash can
-be used to include a whitespace or # character as part of the pattern.
+be used to include a white space or # character as part of the pattern.
 .P
 If you want to remove the special meaning from a sequence of characters, you
 can do so by putting them between \eQ and \eE. This is different from Perl in
@@ -206,7 +206,7 @@ represents:
   \ea        alarm, that is, the BEL character (hex 07)
   \ecx       "control-x", where x is any character
   \ee        escape (hex 1B)
-  \ef        formfeed (hex 0C)
+  \ef        form feed (hex 0C)
   \en        linefeed (hex 0A)
   \er        carriage return (hex 0D)
   \et        tab (hex 09)
@@ -337,12 +337,12 @@ following are always recognized:
 .sp
   \ed     any decimal digit
   \eD     any character that is not a decimal digit
-  \eh     any horizontal whitespace character
-  \eH     any character that is not a horizontal whitespace character
-  \es     any whitespace character
-  \eS     any character that is not a whitespace character
-  \ev     any vertical whitespace character
-  \eV     any character that is not a vertical whitespace character
+  \eh     any horizontal white space character
+  \eH     any character that is not a horizontal white space character
+  \es     any white space character
+  \eS     any character that is not a white space character
+  \ev     any vertical white space character
+  \eV     any character that is not a vertical white space character
   \ew     any "word" character
   \eW     any "non-word" character
 .sp
@@ -394,7 +394,7 @@ The vertical space characters are:
 .sp
   U+000A     Linefeed
   U+000B     Vertical tab
-  U+000C     Formfeed
+  U+000C     Form feed
   U+000D     Carriage return
   U+0085     Next line
   U+2028     Line separator
@@ -435,7 +435,7 @@ below.
 .\"
 This particular group matches either the two-character sequence CR followed by
 LF, or one of the single characters LF (linefeed, U+000A), VT (vertical tab,
-U+000B), FF (formfeed, U+000C), CR (carriage return, U+000D), or NEL (next
+U+000B), FF (form feed, U+000C), CR (carriage return, U+000D), or NEL (next
 line, U+0085). The two-character sequence is treated as a single unit that
 cannot be split.
 .P
@@ -1557,7 +1557,7 @@ always fails if it starts to match "a" rather than "bc". Because there may be
 many capturing parentheses in a pattern, all digits following the backslash are
 taken as part of a potential back reference number. If the pattern continues
 with a digit character, some delimiter must be used to terminate the back
-reference. If the PCRE_EXTENDED option is set, this can be whitespace.
+reference. If the PCRE_EXTENDED option is set, this can be white space.
 Otherwise an empty comment (see
 .\" HTML <a href="#comments">
 .\" </a>
@@ -1839,7 +1839,7 @@ alternative in the subpattern. It is always skipped if control reaches this
 point in the pattern; the idea of DEFINE is that it can be used to define
 "subroutines" that can be referenced from elsewhere. (The use of "subroutines"
 is described below.) For example, a pattern to match an IPv4 address could be
-written like this (ignore whitespace and line breaks):
+written like this (ignore white space and line breaks):
 .sp
   (?(DEFINE) (?<byte> 2[0-4]\ed | 25[0-5] | 1\ed\ed | [1-9]?\ed) )
   \eb (?&byte) (\e.(?&byte)){3} \eb
diff --git a/doc/pcresyntax.3 b/doc/pcresyntax.3
index 3774d7b..4af869d 100644
--- a/doc/pcresyntax.3
+++ b/doc/pcresyntax.3
@@ -26,7 +26,7 @@ syntax.
   \ea         alarm, that is, the BEL character (hex 07)
   \ecx        "control-x", where x is any character
   \ee         escape (hex 1B)
-  \ef         formfeed (hex 0C)
+  \ef         form feed (hex 0C)
   \en         newline (hex 0A)
   \er         carriage return (hex 0D)
   \et         tab (hex 09)
@@ -43,15 +43,15 @@ syntax.
   \eC         one byte, even in UTF-8 mode (best avoided)
   \ed         a decimal digit
   \eD         a character that is not a decimal digit
-  \eh         a horizontal whitespace character
-  \eH         a character that is not a horizontal whitespace character
+  \eh         a horizontal white space character
+  \eH         a character that is not a horizontal white space character
   \ep{\fIxx\fP}     a character with the \fIxx\fP property
   \eP{\fIxx\fP}     a character without the \fIxx\fP property
   \eR         a newline sequence
-  \es         a whitespace character
-  \eS         a character that is not a whitespace character
-  \ev         a vertical whitespace character
-  \eV         a character that is not a vertical whitespace character
+  \es         a white space character
+  \eS         a character that is not a white space character
+  \ev         a vertical white space character
+  \eV         a character that is not a vertical white space character
   \ew         a "word" character
   \eW         a "non-word" character
   \eX         an extended Unicode sequence
@@ -198,7 +198,7 @@ Yi.
   lower       lower case letter
   print       printing, including space
   punct       printing, excluding alphanumeric
-  space       whitespace
+  space       white space
   upper       upper case letter
   word        same as \ew
   xdigit      hexadecimal digit
-- 
1.7.7.6

